# Get X2GoConfig
BROKERURL=$(sed -e 's/ \([^ ]*\)=/\n\1=/g' -e 's/\([^=]["'"'"']\) /\1\n/g' -e 's/ \([^ "'"'"']\)/\n\1/g' /proc/cmdline | 	     awk -F'=' ' /^broker-url=/ { print $2 }' | 	     tr -dc 'a-zA-Z0-9.:/?%_\-@')
SESSIONSELECT=$(sed -e 's/ \([^ ]*\)=/\n\1=/g' -e 's/\([^=]["'"'"']\) /\1\n/g' -e 's/ \([^ "'"'"']\)/\n\1/g' /proc/cmdline | 	         awk -F'=' ' /^session=/ { print $2 }' | 	         tr -dc 'a-zA-Z0-9.:/ _\-@')
LDAP=$(sed -e 's/ \([^ ]*\)=/\n\1=/g' -e 's/\([^=]["'"'"']\) /\1\n/g' -e 's/ \([^ "'"'"']\)/\n\1/g' /proc/cmdline | 	sed 's/^ldap=/ldap#/' | 	awk -F'#' ' /^ldap#/ { print $2 }' | 	tr -dc 'a-zA-Z0-9.:_\-@')
LDAP1=$(sed -e 's/ \([^ ]*\)=/\n\1=/g' -e 's/\([^=]["'"'"']\) /\1\n/g' -e 's/ \([^ "'"'"']\)/\n\1/g' /proc/cmdline | 	 sed 's/^ldap1=/ldap1#/' | 	 awk -F'#' ' /^ldap1#/ { print $2 }' | 	 tr -dc 'a-zA-Z0-9.:_\-@')
LDAP2=$(sed -e 's/ \([^ ]*\)=/\n\1=/g' -e 's/\([^=]["'"'"']\) /\1\n/g' -e 's/ \([^ "'"'"']\)/\n\1/g' /proc/cmdline | 	 sed 's/^ldap2=/ldap2#/' | 	 awk -F'#' ' /^ldap2#/ { print $2 }' | 	 tr -dc 'a-zA-Z0-9.:_\-@')


# Check for background and branding SVGs
BRANDING=''
OLDCON=''
if grep -q ' branding=' /proc/cmdline; then
	while ! [ -s "/etc/x2go/branding.svg" ]; do
		[ -z "$OLDCON" ] && OLDCON="$(fgconsole)"
		chvt "1"
		echo "'$0' is waiting for a valid '/etc/x2go/branding.svg' file."
		sleep "2"
	done
	[ -n "$OLDCON" ] && chvt "$OLDCON"
	BRANDING='--branding=/etc/x2go/branding.svg'
fi
BACKGROUND=''
OLDCON=''
if grep -q ' bg=' /proc/cmdline; then
	while ! [ -s "/etc/x2go/bg.svg" ]; do
		[ -z "$OLDCON" ] && OLDCON="$(fgconsole)"
		chvt "1"
		echo "'$0' is waiting for a valid '/etc/x2go/bg.svg' file."
		sleep "2"
	done
	[ -n "$OLDCON" ] && chvt "$OLDCON"
	BACKGROUND='--background=/etc/x2go/bg.svg'
fi

# Spawn X2GoClient
if [ -n "$SESSIONSELECT" ]; then
	STARTSESSION="--session='$SESSIONSELECT'"
fi
if [ -n "$BROKERURL" ]; then
	SESSIONFROM="--broker-url=$BROKERURL"
else
	SESSIONFROM="--session-conf=/etc/x2go/x2gothinclient_sessions"
	OLDCON=''
	while ! [ -s "/etc/x2go/x2gothinclient_sessions" ]; do
		[ -z "$OLDCON" ] && OLDCON="$(fgconsole)"
		chvt "1"
		echo "'$0' is waiting for a valid '/etc/x2go/x2gothinclient_sessions' file."
		sleep "2"
	done
	[ -n "$OLDCON" ] && chvt "$OLDCON"
fi
if [ -n "$LDAP" ] ; then
	if [ -n "$LDAP1" ] ; then
		BACKUPLDAP="--ldap1=$LDAP1"
		if [ -n "$LDAP2" ] ; then
			BACKUPLDAP="$BACKUPLDAP --ldap2=$LDAP2"
		fi
	fi
	LDAPPARAMS="--ldap=$LDAP $BACKUPLDAP"
else
	LDAPPARAMS=""
fi


THROTTLINGCOMMAND=""
THROTTLEVALUES=$(sed -e 's/ \([^ ]*\)=/\n\1=/g' -e 's/\([^=]["'"'"']\) /\1\n/g' -e 's/ \([^ "'"'"']\)/\n\1/g' /proc/cmdline | awk -F '=' '$1 == "throttle" { print $2 }' | tr -dc '0-9.:u')
if [ -n "$THROTTLEVALUES" ]; then
	# determine maximum line speed
	# look for all interfaces in state "up", then read their speed value from the file named speed
	# just ignore the output if there is none, then sort numeric, unique, and read last line=highest,
	# then sanitize
	MAXSPEEDMBIT=$(grep -l "up" /sys/class/net/*/operstate | xargs -n1 dirname | xargs -n 1 -I XXX cat XXX/speed 2>/dev/null | sort -n -u | tail -1 | tr -dc '0-9.')
	MAXSPEEDKBYTE=$((MAXSPEEDMBIT*128)) #Megabit * 1024 / 8 -> KiloByte

	THROTTLEARR=$(echo $THROTTLEVALUES | awk -F ':' '$1 ~/^[0-9\.u]*$/ && $2 ~/^[0-9\.u]*$/ && $3 ~/^[0-9\.u]*$/ && $4 ~/^[0-9\.u]*$/ && $4 ~/^[0-9\.u]*$/ { print $1 " " $2 " " $3 " " $4 " " $5}')

	THROTTLEARR1=$(echo $THROTTLEARR | cut -d ' ' -f 1)
	THROTTLEARR2=$(echo $THROTTLEARR | cut -d ' ' -f 2)
	THROTTLEARR3=$(echo $THROTTLEARR | cut -d ' ' -f 3)
	THROTTLEARR4=$(echo $THROTTLEARR | cut -d ' ' -f 4)
	THROTTLEARR5=$(echo $THROTTLEARR | cut -d ' ' -f 5)


	if [ -n "$THROTTLEARR1" ] && [ "$THROTTLEARR1" != "u" ]; then
		THROTTLEDOWN="-d $THROTTLEARR1"    # default 10, never used
	elif [ "$THROTTLEARR1" = "u" ]; then
		THROTTLEDOWN="-d $MAXSPEEDKBYTE"
	fi
	if [ -n "$THROTTLEARR2" ] && [ "$THROTTLEARR2" != "u" ]; then
		THROTTLEUP="-u $THROTTLEARR2"      # default 10, never used
	elif [ "$THROTTLEARR2" = "u" ]; then
		THROTTLEUP="-d $MAXSPEEDKBYTE"
	elif [ -z "$THROTTLEARR2" ] ; then
		THROTTLEUP="-d $THROTTLEARR1"      # set up=down if only 1 param
	fi
	if [ -n "$THROTTLEARR3" ] ; then
		THROTTLETIME="-t $THROTTLEARR3"    # default 3.0
	fi
	if [ -n "$THROTTLEARR4" ] ; then
		THROTTLELENGTH="-l $THROTTLEARR4"  # default 20
	fi
	if [ -n "${THROTTLEARR5" ] ; then
		THROTTLELATENCY="-L $THROTTLEARR5" # default 0
	fi
	# only set THROTTLINGCOMMAND if at least one value was detected and sanitized properly
	if [ -n "$THROTTLEUP" ] || [ -n "$THROTTLEDOWN" ] || [ -n "$THROTTLETIME" ] || [ -n "$THROTTLELENGTH" ] || [ -n "$THROTTLELATENCY" ]; then
		THROTTLINGCOMMAND="trickle -s $THROTTLEDOWN $THROTTLEUP $THROTTLETIME $THROTTLELENGTH $THROTTLELATENCY"
	fi
fi

eval $THROTTLINGCOMMAND x2goclient --thinclient --no-session-edit --no-menu --maximize --add-to-known-hosts --haltbt --read-exports-from=/home/user/export $LDAPPARAMS $SESSIONFROM $BACKGROUND $BRANDING $STARTSESSION
